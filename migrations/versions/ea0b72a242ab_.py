"""empty message

Revision ID: ea0b72a242ab
Revises: 
Create Date: 2025-09-08 08:57:27.179205

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ea0b72a242ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('admin_email', sa.String(length=50), nullable=True),
    sa.Column('admin_pwd', sa.String(length=200), nullable=True),
    sa.Column('admin_loggedin', sa.Enum('1', '0', name='admin_loggedin'), nullable=True),
    sa.PrimaryKeyConstraint('admin_id')
    )
    op.create_table('box',
    sa.Column('box_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('box_name', sa.String(length=200), nullable=True),
    sa.Column('box_size', sa.Enum('Large', 'Medium', 'Small', name='box_size'), nullable=True),
    sa.Column('box_price', sa.Integer(), nullable=True),
    sa.Column('box_image', sa.String(length=300), nullable=True),
    sa.Column('box_status', sa.Enum('enabled', 'disabled', name='box_status'), nullable=True),
    sa.Column('box_created_at', sa.DateTime(), nullable=True),
    sa.Column('box_updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('box_id')
    )
    op.create_table('fruit',
    sa.Column('fruit_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fruit_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('fruit_id')
    )
    op.create_table('plan',
    sa.Column('plan_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plan_frequency', sa.Enum('weekly', 'one_off', 'biweekly', 'monthly', name='plan_frequency'), nullable=False),
    sa.Column('plan_created_at', sa.DateTime(), nullable=True),
    sa.Column('plan_updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_fname', sa.String(length=500), nullable=False),
    sa.Column('user_lname', sa.String(length=500), nullable=False),
    sa.Column('user_email', sa.String(length=300), nullable=False),
    sa.Column('user_password', sa.String(length=500), nullable=False),
    sa.Column('user_address', sa.String(length=500), nullable=True),
    sa.Column('user_phone', sa.String(length=20), nullable=True),
    sa.Column('user_dp', sa.String(length=200), nullable=True),
    sa.Column('user_status', sa.Enum('active', 'inactive', 'banned', name='user_status'), nullable=True),
    sa.Column('user_date_created', sa.DateTime(), nullable=True),
    sa.Column('user_date_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email')
    )
    op.create_table('fruit_box',
    sa.Column('fruitbox_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fruitbox_boxid', sa.Integer(), nullable=True),
    sa.Column('fruitbox_fruitid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fruitbox_boxid'], ['box.box_id'], ),
    sa.ForeignKeyConstraint(['fruitbox_fruitid'], ['fruit.fruit_id'], ),
    sa.PrimaryKeyConstraint('fruitbox_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_user_id', sa.Integer(), nullable=True),
    sa.Column('order_box_id', sa.Integer(), nullable=True),
    sa.Column('order_plan_id', sa.Integer(), nullable=True),
    sa.Column('order_pay_status', sa.Enum('pending', 'paid', name='order_pay_status'), nullable=True),
    sa.Column('order_delivery_status', sa.Enum('pending', 'paid', name='order_delivery_status'), nullable=True),
    sa.Column('is_one_time', sa.Boolean(), nullable=True),
    sa.Column('is_reoccuring', sa.Boolean(), nullable=True),
    sa.Column('order_created_at', sa.DateTime(), nullable=True),
    sa.Column('order_updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_box_id'], ['box.box_id'], ),
    sa.ForeignKeyConstraint(['order_plan_id'], ['plan.plan_id'], ),
    sa.ForeignKeyConstraint(['order_user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('subscriptions',
    sa.Column('sub_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sub_userid', sa.Integer(), nullable=True),
    sa.Column('sub_boxid', sa.Integer(), nullable=True),
    sa.Column('sub_planid', sa.Integer(), nullable=True),
    sa.Column('sub_orderid', sa.Integer(), nullable=True),
    sa.Column('sub_startdate', sa.DateTime(), nullable=True),
    sa.Column('sub_nextdeliverydate', sa.DateTime(), nullable=True),
    sa.Column('sub_authorization_code', sa.String(length=300), nullable=True),
    sa.Column('sub_status', sa.Enum('active', 'inactive', 'cancelled', name='sub_status'), nullable=True),
    sa.Column('sub_lastdeliverydate', sa.DateTime(), nullable=True),
    sa.Column('sub_createdat', sa.DateTime(), nullable=True),
    sa.Column('sub_updatedat', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sub_boxid'], ['box.box_id'], ),
    sa.ForeignKeyConstraint(['sub_orderid'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['sub_planid'], ['plan.plan_id'], ),
    sa.ForeignKeyConstraint(['sub_userid'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('sub_id')
    )
    op.create_table('payments',
    sa.Column('pay_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pay_orderid', sa.Integer(), nullable=True),
    sa.Column('pay_subid', sa.Integer(), nullable=True),
    sa.Column('pay_userid', sa.Integer(), nullable=True),
    sa.Column('pay_amount', sa.Integer(), nullable=True),
    sa.Column('pay_status', sa.Enum('pending', 'successful', 'failed', name='pay_status'), nullable=True),
    sa.Column('pay_transactionref', sa.String(length=500), nullable=True),
    sa.Column('pay_attemptedat', sa.DateTime(), nullable=True),
    sa.Column('pay_createdat', sa.DateTime(), nullable=True),
    sa.Column('pay_updatedat', sa.DateTime(), nullable=True),
    sa.Column('pay_actual', sa.Float(), nullable=True),
    sa.Column('pay_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['pay_orderid'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['pay_subid'], ['subscriptions.sub_id'], ),
    sa.ForeignKeyConstraint(['pay_userid'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('pay_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('subscriptions')
    op.drop_table('orders')
    op.drop_table('fruit_box')
    op.drop_table('user')
    op.drop_table('plan')
    op.drop_table('fruit')
    op.drop_table('box')
    op.drop_table('admin')
    # ### end Alembic commands ###
